public boolean isPalindrome(ListNode head) {
         if (head == null || head.next == null)
            return true;

        int len = 0;
        for (ListNode cur = head; cur != null; cur = cur.next) {
            len++;
        }
        // 反转前半段链表
        ListNode cur = head, pre = null;
        for (int i = 0; i < len / 2; i++) {
            ListNode tmp = cur.next;
            cur.next = pre;
            pre = cur;
            cur = tmp;
        }
        // 奇数个链表结点cur后移一位
        if ((len & 1) == 1) {
            cur = cur.next;
        }
        // 遍历比较pre和cur的值相等否
        for (ListNode p = cur, q = pre; p != null && q != null; p = p.next, q = q.next) {
            if (p.val != q.val)
                return false;
        }
        return true;

    }
