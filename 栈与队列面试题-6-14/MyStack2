class MyStack2 {
 Queue<Integer> queue;
    /** Initialize your data structure here. */
    public MyStack() {
      queue = new LinkedList<>();
    }
    
    /** Push element x onto stack. */
    public void push(int x) {
       queue.offer(x);
    }
    
    /** Removes the element on top of the stack and returns that element. */
    public int pop() {
       int size = queue.size();
        for (int i = 0; i < size - 1; i++) {
            queue.offer(queue.poll());
        }
        return queue.poll();
    }
    
    /** Get the top element. */
    public int top() {
         int size = queue.size();
        for (int i = 0; i < size - 1; i++) {
            queue.offer(queue.poll());
        }
        int result = queue.poll();
        queue.offer(result);
        return result;
    }
    
    /** Returns whether the stack is empty. */
    public boolean empty() {
     return queue.isEmpty();
    }
}
